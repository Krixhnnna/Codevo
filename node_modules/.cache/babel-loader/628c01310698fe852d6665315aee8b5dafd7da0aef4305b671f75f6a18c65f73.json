{"ast":null,"code":"import { Vec3 } from '../math/Vec3.js';\n\n// TODO: Handle context loss https://www.khronos.org/webgl/wiki/HandlingContextLost\n\n// Not automatic - devs to use these methods manually\n// gl.colorMask( colorMask, colorMask, colorMask, colorMask );\n// gl.clearColor( r, g, b, a );\n// gl.stencilMask( stencilMask );\n// gl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n// gl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n// gl.clearStencil( stencil );\n\nconst tempVec3 = new Vec3();\nlet ID = 1;\nexport class Renderer {\n  constructor() {\n    let {\n      canvas = document.createElement('canvas'),\n      width = 300,\n      height = 150,\n      dpr = 1,\n      alpha = false,\n      depth = true,\n      stencil = false,\n      antialias = false,\n      premultipliedAlpha = false,\n      preserveDrawingBuffer = false,\n      powerPreference = 'default',\n      autoClear = true,\n      webgl = 2\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const attributes = {\n      alpha,\n      depth,\n      stencil,\n      antialias,\n      premultipliedAlpha,\n      preserveDrawingBuffer,\n      powerPreference\n    };\n    this.dpr = dpr;\n    this.alpha = alpha;\n    this.color = true;\n    this.depth = depth;\n    this.stencil = stencil;\n    this.premultipliedAlpha = premultipliedAlpha;\n    this.autoClear = autoClear;\n    this.id = ID++;\n\n    // Attempt WebGL2 unless forced to 1, if not supported fallback to WebGL1\n    if (webgl === 2) this.gl = canvas.getContext('webgl2', attributes);\n    this.isWebgl2 = !!this.gl;\n    if (!this.gl) this.gl = canvas.getContext('webgl', attributes);\n    if (!this.gl) console.error('unable to create webgl context');\n\n    // Attach renderer to gl so that all classes have access to internal state functions\n    this.gl.renderer = this;\n\n    // initialise size values\n    this.setSize(width, height);\n\n    // gl state stores to avoid redundant calls on methods used internally\n    this.state = {};\n    this.state.blendFunc = {\n      src: this.gl.ONE,\n      dst: this.gl.ZERO\n    };\n    this.state.blendEquation = {\n      modeRGB: this.gl.FUNC_ADD\n    };\n    this.state.cullFace = null;\n    this.state.frontFace = this.gl.CCW;\n    this.state.depthMask = true;\n    this.state.depthFunc = this.gl.LESS;\n    this.state.premultiplyAlpha = false;\n    this.state.flipY = false;\n    this.state.unpackAlignment = 4;\n    this.state.framebuffer = null;\n    this.state.viewport = {\n      x: 0,\n      y: 0,\n      width: null,\n      height: null\n    };\n    this.state.textureUnits = [];\n    this.state.activeTextureUnit = 0;\n    this.state.boundBuffer = null;\n    this.state.uniformLocations = new Map();\n\n    // store requested extensions\n    this.extensions = {};\n\n    // Initialise extra format types\n    if (this.isWebgl2) {\n      this.getExtension('EXT_color_buffer_float');\n      this.getExtension('OES_texture_float_linear');\n    } else {\n      this.getExtension('OES_texture_float');\n      this.getExtension('OES_texture_float_linear');\n      this.getExtension('OES_texture_half_float');\n      this.getExtension('OES_texture_half_float_linear');\n      this.getExtension('OES_element_index_uint');\n      this.getExtension('OES_standard_derivatives');\n      this.getExtension('EXT_sRGB');\n      this.getExtension('WEBGL_depth_texture');\n      this.getExtension('WEBGL_draw_buffers');\n    }\n\n    // Create method aliases using extension (WebGL1) or native if available (WebGL2)\n    this.vertexAttribDivisor = this.getExtension('ANGLE_instanced_arrays', 'vertexAttribDivisor', 'vertexAttribDivisorANGLE');\n    this.drawArraysInstanced = this.getExtension('ANGLE_instanced_arrays', 'drawArraysInstanced', 'drawArraysInstancedANGLE');\n    this.drawElementsInstanced = this.getExtension('ANGLE_instanced_arrays', 'drawElementsInstanced', 'drawElementsInstancedANGLE');\n    this.createVertexArray = this.getExtension('OES_vertex_array_object', 'createVertexArray', 'createVertexArrayOES');\n    this.bindVertexArray = this.getExtension('OES_vertex_array_object', 'bindVertexArray', 'bindVertexArrayOES');\n    this.deleteVertexArray = this.getExtension('OES_vertex_array_object', 'deleteVertexArray', 'deleteVertexArrayOES');\n    this.drawBuffers = this.getExtension('WEBGL_draw_buffers', 'drawBuffers', 'drawBuffersWEBGL');\n\n    // Store device parameters\n    this.parameters = {};\n    this.parameters.maxTextureUnits = this.gl.getParameter(this.gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS);\n    this.parameters.maxAnisotropy = this.getExtension('EXT_texture_filter_anisotropic') ? this.gl.getParameter(this.getExtension('EXT_texture_filter_anisotropic').MAX_TEXTURE_MAX_ANISOTROPY_EXT) : 0;\n  }\n  setSize(width, height) {\n    this.width = width;\n    this.height = height;\n    this.gl.canvas.width = width * this.dpr;\n    this.gl.canvas.height = height * this.dpr;\n    Object.assign(this.gl.canvas.style, {\n      width: width + 'px',\n      height: height + 'px'\n    });\n  }\n  setViewport(width, height) {\n    let x = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    let y = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n    if (this.state.viewport.width === width && this.state.viewport.height === height) return;\n    this.state.viewport.width = width;\n    this.state.viewport.height = height;\n    this.state.viewport.x = x;\n    this.state.viewport.y = y;\n    this.gl.viewport(x, y, width, height);\n  }\n  setScissor(width, height) {\n    let x = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    let y = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n    this.gl.scissor(x, y, width, height);\n  }\n  enable(id) {\n    if (this.state[id] === true) return;\n    this.gl.enable(id);\n    this.state[id] = true;\n  }\n  disable(id) {\n    if (this.state[id] === false) return;\n    this.gl.disable(id);\n    this.state[id] = false;\n  }\n  setBlendFunc(src, dst, srcAlpha, dstAlpha) {\n    if (this.state.blendFunc.src === src && this.state.blendFunc.dst === dst && this.state.blendFunc.srcAlpha === srcAlpha && this.state.blendFunc.dstAlpha === dstAlpha) return;\n    this.state.blendFunc.src = src;\n    this.state.blendFunc.dst = dst;\n    this.state.blendFunc.srcAlpha = srcAlpha;\n    this.state.blendFunc.dstAlpha = dstAlpha;\n    if (srcAlpha !== undefined) this.gl.blendFuncSeparate(src, dst, srcAlpha, dstAlpha);else this.gl.blendFunc(src, dst);\n  }\n  setBlendEquation(modeRGB, modeAlpha) {\n    modeRGB = modeRGB || this.gl.FUNC_ADD;\n    if (this.state.blendEquation.modeRGB === modeRGB && this.state.blendEquation.modeAlpha === modeAlpha) return;\n    this.state.blendEquation.modeRGB = modeRGB;\n    this.state.blendEquation.modeAlpha = modeAlpha;\n    if (modeAlpha !== undefined) this.gl.blendEquationSeparate(modeRGB, modeAlpha);else this.gl.blendEquation(modeRGB);\n  }\n  setCullFace(value) {\n    if (this.state.cullFace === value) return;\n    this.state.cullFace = value;\n    this.gl.cullFace(value);\n  }\n  setFrontFace(value) {\n    if (this.state.frontFace === value) return;\n    this.state.frontFace = value;\n    this.gl.frontFace(value);\n  }\n  setDepthMask(value) {\n    if (this.state.depthMask === value) return;\n    this.state.depthMask = value;\n    this.gl.depthMask(value);\n  }\n  setDepthFunc(value) {\n    if (this.state.depthFunc === value) return;\n    this.state.depthFunc = value;\n    this.gl.depthFunc(value);\n  }\n  activeTexture(value) {\n    if (this.state.activeTextureUnit === value) return;\n    this.state.activeTextureUnit = value;\n    this.gl.activeTexture(this.gl.TEXTURE0 + value);\n  }\n  bindFramebuffer() {\n    let {\n      target = this.gl.FRAMEBUFFER,\n      buffer = null\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (this.state.framebuffer === buffer) return;\n    this.state.framebuffer = buffer;\n    this.gl.bindFramebuffer(target, buffer);\n  }\n  getExtension(extension, webgl2Func, extFunc) {\n    // if webgl2 function supported, return func bound to gl context\n    if (webgl2Func && this.gl[webgl2Func]) return this.gl[webgl2Func].bind(this.gl);\n\n    // fetch extension once only\n    if (!this.extensions[extension]) {\n      this.extensions[extension] = this.gl.getExtension(extension);\n    }\n\n    // return extension if no function requested\n    if (!webgl2Func) return this.extensions[extension];\n\n    // Return null if extension not supported\n    if (!this.extensions[extension]) return null;\n\n    // return extension function, bound to extension\n    return this.extensions[extension][extFunc].bind(this.extensions[extension]);\n  }\n  sortOpaque(a, b) {\n    if (a.renderOrder !== b.renderOrder) {\n      return a.renderOrder - b.renderOrder;\n    } else if (a.program.id !== b.program.id) {\n      return a.program.id - b.program.id;\n    } else if (a.zDepth !== b.zDepth) {\n      return a.zDepth - b.zDepth;\n    } else {\n      return b.id - a.id;\n    }\n  }\n  sortTransparent(a, b) {\n    if (a.renderOrder !== b.renderOrder) {\n      return a.renderOrder - b.renderOrder;\n    }\n    if (a.zDepth !== b.zDepth) {\n      return b.zDepth - a.zDepth;\n    } else {\n      return b.id - a.id;\n    }\n  }\n  sortUI(a, b) {\n    if (a.renderOrder !== b.renderOrder) {\n      return a.renderOrder - b.renderOrder;\n    } else if (a.program.id !== b.program.id) {\n      return a.program.id - b.program.id;\n    } else {\n      return b.id - a.id;\n    }\n  }\n  getRenderList(_ref) {\n    let {\n      scene,\n      camera,\n      frustumCull,\n      sort\n    } = _ref;\n    let renderList = [];\n    if (camera && frustumCull) camera.updateFrustum();\n\n    // Get visible\n    scene.traverse(node => {\n      if (!node.visible) return true;\n      if (!node.draw) return;\n      if (frustumCull && node.frustumCulled && camera) {\n        if (!camera.frustumIntersectsMesh(node)) return;\n      }\n      renderList.push(node);\n    });\n    if (sort) {\n      const opaque = [];\n      const transparent = []; // depthTest true\n      const ui = []; // depthTest false\n\n      renderList.forEach(node => {\n        // Split into the 3 render groups\n        if (!node.program.transparent) {\n          opaque.push(node);\n        } else if (node.program.depthTest) {\n          transparent.push(node);\n        } else {\n          ui.push(node);\n        }\n        node.zDepth = 0;\n\n        // Only calculate z-depth if renderOrder unset and depthTest is true\n        if (node.renderOrder !== 0 || !node.program.depthTest || !camera) return;\n\n        // update z-depth\n        node.worldMatrix.getTranslation(tempVec3);\n        tempVec3.applyMatrix4(camera.projectionViewMatrix);\n        node.zDepth = tempVec3.z;\n      });\n      opaque.sort(this.sortOpaque);\n      transparent.sort(this.sortTransparent);\n      ui.sort(this.sortUI);\n      renderList = opaque.concat(transparent, ui);\n    }\n    return renderList;\n  }\n  render(_ref2) {\n    let {\n      scene,\n      camera,\n      target = null,\n      update = true,\n      sort = true,\n      frustumCull = true,\n      clear\n    } = _ref2;\n    if (target === null) {\n      // make sure no render target bound so draws to canvas\n      this.bindFramebuffer();\n      this.setViewport(this.width * this.dpr, this.height * this.dpr);\n    } else {\n      // bind supplied render target and update viewport\n      this.bindFramebuffer(target);\n      this.setViewport(target.width, target.height);\n    }\n    if (clear || this.autoClear && clear !== false) {\n      // Ensure depth buffer writing is enabled so it can be cleared\n      if (this.depth && (!target || target.depth)) {\n        this.enable(this.gl.DEPTH_TEST);\n        this.setDepthMask(true);\n      }\n      this.gl.clear((this.color ? this.gl.COLOR_BUFFER_BIT : 0) | (this.depth ? this.gl.DEPTH_BUFFER_BIT : 0) | (this.stencil ? this.gl.STENCIL_BUFFER_BIT : 0));\n    }\n\n    // updates all scene graph matrices\n    if (update) scene.updateMatrixWorld();\n\n    // Update camera separately, in case not in scene graph\n    if (camera) camera.updateMatrixWorld();\n\n    // Get render list - entails culling and sorting\n    const renderList = this.getRenderList({\n      scene,\n      camera,\n      frustumCull,\n      sort\n    });\n    renderList.forEach(node => {\n      node.draw({\n        camera\n      });\n    });\n  }\n}","map":{"version":3,"names":["Vec3","tempVec3","ID","Renderer","constructor","canvas","document","createElement","width","height","dpr","alpha","depth","stencil","antialias","premultipliedAlpha","preserveDrawingBuffer","powerPreference","autoClear","webgl","arguments","length","undefined","attributes","color","id","gl","getContext","isWebgl2","console","error","renderer","setSize","state","blendFunc","src","ONE","dst","ZERO","blendEquation","modeRGB","FUNC_ADD","cullFace","frontFace","CCW","depthMask","depthFunc","LESS","premultiplyAlpha","flipY","unpackAlignment","framebuffer","viewport","x","y","textureUnits","activeTextureUnit","boundBuffer","uniformLocations","Map","extensions","getExtension","vertexAttribDivisor","drawArraysInstanced","drawElementsInstanced","createVertexArray","bindVertexArray","deleteVertexArray","drawBuffers","parameters","maxTextureUnits","getParameter","MAX_COMBINED_TEXTURE_IMAGE_UNITS","maxAnisotropy","MAX_TEXTURE_MAX_ANISOTROPY_EXT","Object","assign","style","setViewport","setScissor","scissor","enable","disable","setBlendFunc","srcAlpha","dstAlpha","blendFuncSeparate","setBlendEquation","modeAlpha","blendEquationSeparate","setCullFace","value","setFrontFace","setDepthMask","setDepthFunc","activeTexture","TEXTURE0","bindFramebuffer","target","FRAMEBUFFER","buffer","extension","webgl2Func","extFunc","bind","sortOpaque","a","b","renderOrder","program","zDepth","sortTransparent","sortUI","getRenderList","_ref","scene","camera","frustumCull","sort","renderList","updateFrustum","traverse","node","visible","draw","frustumCulled","frustumIntersectsMesh","push","opaque","transparent","ui","forEach","depthTest","worldMatrix","getTranslation","applyMatrix4","projectionViewMatrix","z","concat","render","_ref2","update","clear","DEPTH_TEST","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","updateMatrixWorld"],"sources":["/Users/krishnapandey/Desktop/Codevo/node_modules/ogl/src/core/Renderer.js"],"sourcesContent":["import { Vec3 } from '../math/Vec3.js';\n\n// TODO: Handle context loss https://www.khronos.org/webgl/wiki/HandlingContextLost\n\n// Not automatic - devs to use these methods manually\n// gl.colorMask( colorMask, colorMask, colorMask, colorMask );\n// gl.clearColor( r, g, b, a );\n// gl.stencilMask( stencilMask );\n// gl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n// gl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n// gl.clearStencil( stencil );\n\nconst tempVec3 = new Vec3();\nlet ID = 1;\n\nexport class Renderer {\n    constructor({\n        canvas = document.createElement('canvas'),\n        width = 300,\n        height = 150,\n        dpr = 1,\n        alpha = false,\n        depth = true,\n        stencil = false,\n        antialias = false,\n        premultipliedAlpha = false,\n        preserveDrawingBuffer = false,\n        powerPreference = 'default',\n        autoClear = true,\n        webgl = 2,\n    } = {}) {\n        const attributes = { alpha, depth, stencil, antialias, premultipliedAlpha, preserveDrawingBuffer, powerPreference };\n        this.dpr = dpr;\n        this.alpha = alpha;\n        this.color = true;\n        this.depth = depth;\n        this.stencil = stencil;\n        this.premultipliedAlpha = premultipliedAlpha;\n        this.autoClear = autoClear;\n        this.id = ID++;\n\n        // Attempt WebGL2 unless forced to 1, if not supported fallback to WebGL1\n        if (webgl === 2) this.gl = canvas.getContext('webgl2', attributes);\n        this.isWebgl2 = !!this.gl;\n        if (!this.gl) this.gl = canvas.getContext('webgl', attributes);\n        if (!this.gl) console.error('unable to create webgl context');\n\n        // Attach renderer to gl so that all classes have access to internal state functions\n        this.gl.renderer = this;\n\n        // initialise size values\n        this.setSize(width, height);\n\n        // gl state stores to avoid redundant calls on methods used internally\n        this.state = {};\n        this.state.blendFunc = { src: this.gl.ONE, dst: this.gl.ZERO };\n        this.state.blendEquation = { modeRGB: this.gl.FUNC_ADD };\n        this.state.cullFace = null;\n        this.state.frontFace = this.gl.CCW;\n        this.state.depthMask = true;\n        this.state.depthFunc = this.gl.LESS;\n        this.state.premultiplyAlpha = false;\n        this.state.flipY = false;\n        this.state.unpackAlignment = 4;\n        this.state.framebuffer = null;\n        this.state.viewport = { x: 0, y: 0, width: null, height: null };\n        this.state.textureUnits = [];\n        this.state.activeTextureUnit = 0;\n        this.state.boundBuffer = null;\n        this.state.uniformLocations = new Map();\n\n        // store requested extensions\n        this.extensions = {};\n\n        // Initialise extra format types\n        if (this.isWebgl2) {\n            this.getExtension('EXT_color_buffer_float');\n            this.getExtension('OES_texture_float_linear');\n        } else {\n            this.getExtension('OES_texture_float');\n            this.getExtension('OES_texture_float_linear');\n            this.getExtension('OES_texture_half_float');\n            this.getExtension('OES_texture_half_float_linear');\n            this.getExtension('OES_element_index_uint');\n            this.getExtension('OES_standard_derivatives');\n            this.getExtension('EXT_sRGB');\n            this.getExtension('WEBGL_depth_texture');\n            this.getExtension('WEBGL_draw_buffers');\n        }\n\n        // Create method aliases using extension (WebGL1) or native if available (WebGL2)\n        this.vertexAttribDivisor = this.getExtension('ANGLE_instanced_arrays', 'vertexAttribDivisor', 'vertexAttribDivisorANGLE');\n        this.drawArraysInstanced = this.getExtension('ANGLE_instanced_arrays', 'drawArraysInstanced', 'drawArraysInstancedANGLE');\n        this.drawElementsInstanced = this.getExtension('ANGLE_instanced_arrays', 'drawElementsInstanced', 'drawElementsInstancedANGLE');\n        this.createVertexArray = this.getExtension('OES_vertex_array_object', 'createVertexArray', 'createVertexArrayOES');\n        this.bindVertexArray = this.getExtension('OES_vertex_array_object', 'bindVertexArray', 'bindVertexArrayOES');\n        this.deleteVertexArray = this.getExtension('OES_vertex_array_object', 'deleteVertexArray', 'deleteVertexArrayOES');\n        this.drawBuffers = this.getExtension('WEBGL_draw_buffers', 'drawBuffers', 'drawBuffersWEBGL');\n\n        // Store device parameters\n        this.parameters = {};\n        this.parameters.maxTextureUnits = this.gl.getParameter(this.gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS);\n        this.parameters.maxAnisotropy = this.getExtension('EXT_texture_filter_anisotropic')\n            ? this.gl.getParameter(this.getExtension('EXT_texture_filter_anisotropic').MAX_TEXTURE_MAX_ANISOTROPY_EXT)\n            : 0;\n    }\n\n    setSize(width, height) {\n        this.width = width;\n        this.height = height;\n\n        this.gl.canvas.width = width * this.dpr;\n        this.gl.canvas.height = height * this.dpr;\n\n        Object.assign(this.gl.canvas.style, {\n            width: width + 'px',\n            height: height + 'px',\n        });\n    }\n\n    setViewport(width, height, x = 0, y = 0) {\n        if (this.state.viewport.width === width && this.state.viewport.height === height) return;\n        this.state.viewport.width = width;\n        this.state.viewport.height = height;\n        this.state.viewport.x = x;\n        this.state.viewport.y = y;\n        this.gl.viewport(x, y, width, height);\n    }\n\n    setScissor(width, height, x = 0, y = 0) {\n        this.gl.scissor(x, y, width, height);\n    }\n\n    enable(id) {\n        if (this.state[id] === true) return;\n        this.gl.enable(id);\n        this.state[id] = true;\n    }\n\n    disable(id) {\n        if (this.state[id] === false) return;\n        this.gl.disable(id);\n        this.state[id] = false;\n    }\n\n    setBlendFunc(src, dst, srcAlpha, dstAlpha) {\n        if (\n            this.state.blendFunc.src === src &&\n            this.state.blendFunc.dst === dst &&\n            this.state.blendFunc.srcAlpha === srcAlpha &&\n            this.state.blendFunc.dstAlpha === dstAlpha\n        )\n            return;\n        this.state.blendFunc.src = src;\n        this.state.blendFunc.dst = dst;\n        this.state.blendFunc.srcAlpha = srcAlpha;\n        this.state.blendFunc.dstAlpha = dstAlpha;\n        if (srcAlpha !== undefined) this.gl.blendFuncSeparate(src, dst, srcAlpha, dstAlpha);\n        else this.gl.blendFunc(src, dst);\n    }\n\n    setBlendEquation(modeRGB, modeAlpha) {\n        modeRGB = modeRGB || this.gl.FUNC_ADD;\n        if (this.state.blendEquation.modeRGB === modeRGB && this.state.blendEquation.modeAlpha === modeAlpha) return;\n        this.state.blendEquation.modeRGB = modeRGB;\n        this.state.blendEquation.modeAlpha = modeAlpha;\n        if (modeAlpha !== undefined) this.gl.blendEquationSeparate(modeRGB, modeAlpha);\n        else this.gl.blendEquation(modeRGB);\n    }\n\n    setCullFace(value) {\n        if (this.state.cullFace === value) return;\n        this.state.cullFace = value;\n        this.gl.cullFace(value);\n    }\n\n    setFrontFace(value) {\n        if (this.state.frontFace === value) return;\n        this.state.frontFace = value;\n        this.gl.frontFace(value);\n    }\n\n    setDepthMask(value) {\n        if (this.state.depthMask === value) return;\n        this.state.depthMask = value;\n        this.gl.depthMask(value);\n    }\n\n    setDepthFunc(value) {\n        if (this.state.depthFunc === value) return;\n        this.state.depthFunc = value;\n        this.gl.depthFunc(value);\n    }\n\n    activeTexture(value) {\n        if (this.state.activeTextureUnit === value) return;\n        this.state.activeTextureUnit = value;\n        this.gl.activeTexture(this.gl.TEXTURE0 + value);\n    }\n\n    bindFramebuffer({ target = this.gl.FRAMEBUFFER, buffer = null } = {}) {\n        if (this.state.framebuffer === buffer) return;\n        this.state.framebuffer = buffer;\n        this.gl.bindFramebuffer(target, buffer);\n    }\n\n    getExtension(extension, webgl2Func, extFunc) {\n        // if webgl2 function supported, return func bound to gl context\n        if (webgl2Func && this.gl[webgl2Func]) return this.gl[webgl2Func].bind(this.gl);\n\n        // fetch extension once only\n        if (!this.extensions[extension]) {\n            this.extensions[extension] = this.gl.getExtension(extension);\n        }\n\n        // return extension if no function requested\n        if (!webgl2Func) return this.extensions[extension];\n\n        // Return null if extension not supported\n        if (!this.extensions[extension]) return null;\n\n        // return extension function, bound to extension\n        return this.extensions[extension][extFunc].bind(this.extensions[extension]);\n    }\n\n    sortOpaque(a, b) {\n        if (a.renderOrder !== b.renderOrder) {\n            return a.renderOrder - b.renderOrder;\n        } else if (a.program.id !== b.program.id) {\n            return a.program.id - b.program.id;\n        } else if (a.zDepth !== b.zDepth) {\n            return a.zDepth - b.zDepth;\n        } else {\n            return b.id - a.id;\n        }\n    }\n\n    sortTransparent(a, b) {\n        if (a.renderOrder !== b.renderOrder) {\n            return a.renderOrder - b.renderOrder;\n        }\n        if (a.zDepth !== b.zDepth) {\n            return b.zDepth - a.zDepth;\n        } else {\n            return b.id - a.id;\n        }\n    }\n\n    sortUI(a, b) {\n        if (a.renderOrder !== b.renderOrder) {\n            return a.renderOrder - b.renderOrder;\n        } else if (a.program.id !== b.program.id) {\n            return a.program.id - b.program.id;\n        } else {\n            return b.id - a.id;\n        }\n    }\n\n    getRenderList({ scene, camera, frustumCull, sort }) {\n        let renderList = [];\n\n        if (camera && frustumCull) camera.updateFrustum();\n\n        // Get visible\n        scene.traverse((node) => {\n            if (!node.visible) return true;\n            if (!node.draw) return;\n\n            if (frustumCull && node.frustumCulled && camera) {\n                if (!camera.frustumIntersectsMesh(node)) return;\n            }\n\n            renderList.push(node);\n        });\n\n        if (sort) {\n            const opaque = [];\n            const transparent = []; // depthTest true\n            const ui = []; // depthTest false\n\n            renderList.forEach((node) => {\n                // Split into the 3 render groups\n                if (!node.program.transparent) {\n                    opaque.push(node);\n                } else if (node.program.depthTest) {\n                    transparent.push(node);\n                } else {\n                    ui.push(node);\n                }\n\n                node.zDepth = 0;\n\n                // Only calculate z-depth if renderOrder unset and depthTest is true\n                if (node.renderOrder !== 0 || !node.program.depthTest || !camera) return;\n\n                // update z-depth\n                node.worldMatrix.getTranslation(tempVec3);\n                tempVec3.applyMatrix4(camera.projectionViewMatrix);\n                node.zDepth = tempVec3.z;\n            });\n\n            opaque.sort(this.sortOpaque);\n            transparent.sort(this.sortTransparent);\n            ui.sort(this.sortUI);\n\n            renderList = opaque.concat(transparent, ui);\n        }\n\n        return renderList;\n    }\n\n    render({ scene, camera, target = null, update = true, sort = true, frustumCull = true, clear }) {\n        if (target === null) {\n            // make sure no render target bound so draws to canvas\n            this.bindFramebuffer();\n            this.setViewport(this.width * this.dpr, this.height * this.dpr);\n        } else {\n            // bind supplied render target and update viewport\n            this.bindFramebuffer(target);\n            this.setViewport(target.width, target.height);\n        }\n\n        if (clear || (this.autoClear && clear !== false)) {\n            // Ensure depth buffer writing is enabled so it can be cleared\n            if (this.depth && (!target || target.depth)) {\n                this.enable(this.gl.DEPTH_TEST);\n                this.setDepthMask(true);\n            }\n            this.gl.clear(\n                (this.color ? this.gl.COLOR_BUFFER_BIT : 0) |\n                    (this.depth ? this.gl.DEPTH_BUFFER_BIT : 0) |\n                    (this.stencil ? this.gl.STENCIL_BUFFER_BIT : 0)\n            );\n        }\n\n        // updates all scene graph matrices\n        if (update) scene.updateMatrixWorld();\n\n        // Update camera separately, in case not in scene graph\n        if (camera) camera.updateMatrixWorld();\n\n        // Get render list - entails culling and sorting\n        const renderList = this.getRenderList({ scene, camera, frustumCull, sort });\n\n        renderList.forEach((node) => {\n            node.draw({ camera });\n        });\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}